import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd
import joblib
from sklearn.metrics import roc_curve, auc
from sklearn.metrics import confusion_matrix


def plot_fraud_distribution(df):
    plt.figure(figsize=(6,4))
    sns.countplot(x='Fraude', data=df)
    plt.title("Distribución de transacciones fraudulentas")
    plt.xlabel("Fraude")
    plt.ylabel("Cantidad")
    plt.savefig("reports/visualizaciones/fraud_distribution.png")
    plt.close()


def plot_feature_importance_rf(model_path, feature_names):
    model = joblib.load(model_path)
    importances = model.feature_importances_
    feat_imp = pd.Series(importances, index=feature_names).sort_values(ascending=False)

    plt.figure(figsize=(10,6))
    feat_imp.plot(kind='bar')
    plt.title("Importancia de variables - Random Forest")
    plt.ylabel("Importancia")
    plt.tight_layout()
    plt.savefig("reports/visualizaciones/feature_importance_rf.png")
    plt.close()



def plot_roc_curve_xgb(model_path, X_test, y_test):
    model = joblib.load(model_path)
    y_proba = model.predict_proba(X_test)[:, 1]
    fpr, tpr, _ = roc_curve(y_test, y_proba)
    roc_auc = auc(fpr, tpr)

    plt.figure(figsize=(6,5))
    plt.plot(fpr, tpr, label=f'AUC = {roc_auc:.2f}')
    plt.plot([0,1], [0,1], 'k--')
    plt.title("Curva ROC - XGBoost")
    plt.xlabel("FPR")
    plt.ylabel("TPR")
    plt.legend()
    plt.savefig("reports/visualizaciones/roc_curve_xgb.png")
    plt.close()



def plot_confusion_matrix(y_true, y_pred, model_name):
    cm = confusion_matrix(y_true, y_pred)
    plt.figure(figsize=(5,4))
    sns.heatmap(cm, annot=True, fmt='d', cmap='Blues')
    plt.title(f"Matriz de Confusión - {model_name}")
    plt.xlabel("Predicción")
    plt.ylabel("Real")
    plt.savefig(f"reports/visualizaciones/confusion_matrix_{model_name.lower()}.png")
    plt.close()
